import { GetServerSidePropsContext, NextPageContext } from "next";
import { JsonValue, SetRequired } from "type-fest";
import { InternalSubtreeConfig } from "./config";
export declare type Cookies = Record<string, JsonValue>;
export declare type CookieContext = SetRequired<Partial<GetServerSidePropsContext | NextPageContext>, "req" | "res">;
export declare type CookieConfig = Pick<InternalSubtreeConfig, "cookieName" | "compress" | "cookieOptions">;
/**
 * An isomorphic class to set and get (compressed) state cookies.
 */
export declare class StateCookies {
    protected _config: Map<string, Pick<InternalSubtreeConfig, "cookieName" | "compress" | "cookieOptions">>;
    private readonly _context?;
    private _cookies?;
    /**
     * @param context The Next.js context for the request (if on the server)
     */
    constructor(context?: CookieContext);
    private static _encodeState;
    private static _encodeStateCompressed;
    private static _decodeState;
    /**
     * Set the configuration (@see CookieConfig) for each cookie
     */
    setConfigurations(configurations: CookieConfig[]): void;
    getAll(): Record<string, JsonValue>;
    set(name: string, state: any): void;
}
